name: Release on Main Push

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
         java-version: '17'  # Set Java version to 17

      - name: Show Java version
        run: java -version

      - name: Show Maven version
        run: mvn -version
      
      - name: Get Version from POM
        id: get_version
        run: echo "VERSION=$(grep -m1 '<version>' api/pom.xml | sed 's/.*<version>\(.*\)<\/version>.*/\1/')" >> $GITHUB_ENV

      - name: Print Version
        run: echo "Version:\ ${{ env.VERSION }}"


      - name: Build and Install API Module
        working-directory: ./api
        run: mvn clean install
      
      - name: Archive JAR file
        uses: actions/upload-artifact@v3.1.2
        with:
         name: MaskedCratesAPI-${{ env.VERSION }}
         path: api/target/MaskedCratesAPI-${{ env.VERSION }}.jar
      
  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'  # Set Java version to 17

      - name: Download JAR file
        uses: actions/download-artifact@v2.1.1
        with:
          #name: MaskedCratesAPI-${{ env.VERSION }}
          path: target/

      - name: Get Version from POM
        id: get_version
        run: echo "VERSION=$(grep -m1 '<version>' api/pom.xml | sed 's/.*<version>\(.*\)<\/version>.*/\1/')" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/MaskedCratesAPI-${{ env.VERSION }}.jar
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          generate_release_notes: true
          draft: false
          prerelease: false
